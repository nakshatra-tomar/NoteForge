{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomar\\\\OneDrive\\\\Desktop\\\\GitHub\\\\NoteForge\\\\src\\\\components\\\\CreateArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateArea(props) {\n  _s();\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  function handleChange(event) {\n    // Destructure the 'name' and 'value' properties from the event target (input element)\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update the 'note' state based on the previous state\n    setNote(prevNote => {\n      // Return a new state object by spreading the previous state (...prevNote)\n      // and updating the property with the name provided by the event and its corresponding value\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n  function submitNote(event) {\n    // Call the 'onAdd' function passed as a prop to the component,\n    // and pass the 'note' object as an argument to add a new note.\n    props.onAdd(note);\n    setNote({\n      //clears the note after submission\n      title: \"\",\n      content: \"\"\n    });\n    // Prevent the default form submission behavior to avoid page reload.\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: handleChange,\n        value: note.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        onChange: handleChange,\n        value: note.content,\n        placeholder: \"Take a note...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitNote,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateArea, \"Jsq5HkGKqdllUQmIg/Pt6DM3Gds=\");\n_c = CreateArea;\nexport default CreateArea;\nvar _c;\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateArea","props","_s","note","setNote","title","content","handleChange","event","name","value","target","prevNote","submitNote","onAdd","preventDefault","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tomar/OneDrive/Desktop/GitHub/NoteForge/src/components/CreateArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction CreateArea(props) {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  function handleChange(event) {\r\n    // Destructure the 'name' and 'value' properties from the event target (input element)\r\n    const { name, value } = event.target;\r\n  \r\n    // Update the 'note' state based on the previous state\r\n    setNote(prevNote => {\r\n      // Return a new state object by spreading the previous state (...prevNote)\r\n      // and updating the property with the name provided by the event and its corresponding value\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    // Call the 'onAdd' function passed as a prop to the component,\r\n    // and pass the 'note' object as an argument to add a new note.\r\n    props.onAdd(note);\r\n\r\n    setNote({                 //clears the note after submission\r\n      title: \"\",\r\n      content: \"\"\r\n    })\r\n    // Prevent the default form submission behavior to avoid page reload.\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input name=\"title\" \r\n        onChange={handleChange}\r\n        value={note.title} \r\n        placeholder=\"Title\" \r\n        />\r\n\r\n        <textarea \r\n        name=\"content\" \r\n        onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\" \r\n          rows=\"3\" />\r\n        <button onClick = {submitNote}>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3B;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;;IAEpC;IACAP,OAAO,CAACQ,QAAQ,IAAI;MAClB;MACA;MACA,OAAO;QACL,GAAGA,QAAQ;QACX,CAACH,IAAI,GAAGC;MACV,CAAC;IACH,CAAC,CAAC;EACJ;EAEA,SAASG,UAAUA,CAACL,KAAK,EAAE;IACzB;IACA;IACAP,KAAK,CAACa,KAAK,CAACX,IAAI,CAAC;IAEjBC,OAAO,CAAC;MAAkB;MACxBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;IACF;IACAE,KAAK,CAACO,cAAc,CAAC,CAAC;EACxB;EACA,oBACEhB,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAOU,IAAI,EAAC,OAAO;QACnBQ,QAAQ,EAAEV,YAAa;QACvBG,KAAK,EAAEP,IAAI,CAACE,KAAM;QAClBa,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEFvB,OAAA;QACAU,IAAI,EAAC,SAAS;QACdQ,QAAQ,EAAEV,YAAa;QACrBG,KAAK,EAAEP,IAAI,CAACG,OAAQ;QACpBY,WAAW,EAAC,gBAAgB;QAC5BK,IAAI,EAAC;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbvB,OAAA;QAAQyB,OAAO,EAAIX,UAAW;QAAAG,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CApDQF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAsDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}