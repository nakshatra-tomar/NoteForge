{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomar\\\\OneDrive\\\\Desktop\\\\GitHub\\\\NoteForge\\\\src\\\\components\\\\CreateArea.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateArea() {\n  _s();\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  function handleChange(event) {\n    // Destructure the 'name' and 'value' properties from the event target (input element)\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update the 'note' state based on the previous state\n    setNote(prevNote => {\n      // Return a new state object by spreading the previous state (...prevNote)\n      // and updating the property with the name provided by the event and its corresponding value\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n  function submitNote(event) {\n    props.onAdd(note);\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: handleChange,\n        value: note.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        onChange: handleChange,\n        value: note.content,\n        placeholder: \"Take a note...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitNote,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateArea, \"hkbdeIwI5y0iiwfSPR0mcnx9Oe4=\");\n_c = CreateArea;\nexport default CreateArea;\nvar _c;\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CreateArea","_s","note","setNote","useState","title","content","handleChange","event","name","value","target","prevNote","submitNote","props","onAdd","preventDefault","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tomar/OneDrive/Desktop/GitHub/NoteForge/src/components/CreateArea.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction CreateArea() {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    // Destructure the 'name' and 'value' properties from the event target (input element)\n    const { name, value } = event.target;\n  \n    // Update the 'note' state based on the previous state\n    setNote(prevNote => {\n      // Return a new state object by spreading the previous state (...prevNote)\n      // and updating the property with the name provided by the event and its corresponding value\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event){\n\n    props.onAdd(note);\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form>\n        <input name=\"title\" \n        onChange={handleChange}\n        value={note.title} \n        placeholder=\"Title\" \n        />\n\n        <textarea \n        name=\"content\" \n        onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\" \n          rows=\"3\" />\n        <button onClick = {submitNote}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC;IAC/BC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3B;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;;IAEpC;IACAR,OAAO,CAACS,QAAQ,IAAI;MAClB;MACA;MACA,OAAO;QACL,GAAGA,QAAQ;QACX,CAACH,IAAI,GAAGC;MACV,CAAC;IACH,CAAC,CAAC;EACJ;EAEA,SAASG,UAAUA,CAACL,KAAK,EAAC;IAExBM,KAAK,CAACC,KAAK,CAACb,IAAI,CAAC;IACjBM,KAAK,CAACQ,cAAc,CAAC,CAAC;EACxB;EAEA,oBACEjB,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAOU,IAAI,EAAC,OAAO;QACnBS,QAAQ,EAAEX,YAAa;QACvBG,KAAK,EAAER,IAAI,CAACG,KAAM;QAClBc,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEFxB,OAAA;QACAU,IAAI,EAAC,SAAS;QACdS,QAAQ,EAAEX,YAAa;QACrBG,KAAK,EAAER,IAAI,CAACI,OAAQ;QACpBa,WAAW,EAAC,gBAAgB;QAC5BK,IAAI,EAAC;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbxB,OAAA;QAAQ0B,OAAO,EAAIZ,UAAW;QAAAI,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CA9CQD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAgDnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}